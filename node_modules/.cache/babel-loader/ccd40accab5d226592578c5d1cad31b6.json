{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/atividades/q2/entregas/5A12/react-entrega-s5-hamburgueria-2-0-com-typescript-json-server-vinapro91/src/components/Form/form.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, FormErrorMessage, FormLabel, Input as ChakraInput, InputLeftElement, InputGroup } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { forwardRef } from \"react-router/node_modules/@types/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputVariation = {\n  error: \"negative.100\",\n  default: \"gray.400\",\n  focus: \"gray.600\",\n  filled: \"sucess.100\"\n};\n\nconst InputBase = ({\n  name,\n  error = null,\n  icon: Icon,\n  label,\n  ...rest\n}, ref) => {\n  _s();\n\n  const [variation, setVariation] = useState(\"default\");\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    if (error) {\n      return setVariation(\"error\");\n    }\n  }, [error]);\n  const handleInputFocus = useCallback(() => {\n    if (!!error) {\n      setVariation(\"focus\");\n    }\n  }, [error]);\n  const handleInputBlur = useCallback(() => {\n    if (value.length > 1 && !error) {\n      return setVariation(\"filled\");\n    }\n  }, [error, value]);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    isInvalid: !!error,\n    children: [!!label && /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n      flexDirection: \"column\",\n      children: [Icon && /*#__PURE__*/_jsxDEV(InputLeftElement, {\n        mt: \"2.5\",\n        color: inputVariation[variation],\n        children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChakraInput, {\n        name: name,\n        bg: \"gray.50\",\n        color: inputVariation[variation],\n        borderColor: inputVariation[variation],\n        onFocus: handleInputFocus,\n        onBlurCapture: handleInputBlur,\n        onChangeCapture: e => setValue(e.currentTarget.value),\n        variant: \"outline\",\n        _hover: {\n          bgColor: \"gray.100\"\n        },\n        _placeholder: {\n          color: \"gray.400\"\n        },\n        size: \"lg\",\n        h: \"60px\",\n        ref: ref,\n        ...rest\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !!error && /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputBase, \"fbfamwvTlKqaoms27QvILE3SsVs=\");\n\n_c = InputBase;\nexport const Input = forwardRef(InputBase);\n_c2 = Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputBase\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["/home/vinicius/atividades/q2/entregas/5A12/react-entrega-s5-hamburgueria-2-0-com-typescript-json-server-vinapro91/src/components/Form/form.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","ChakraInput","InputLeftElement","InputGroup","React","useState","useEffect","useCallback","forwardRef","inputVariation","error","default","focus","filled","InputBase","name","icon","Icon","label","rest","ref","variation","setVariation","value","setValue","handleInputFocus","handleInputBlur","length","e","currentTarget","bgColor","color","message"],"mappings":"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","sourcesContent":["import {\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input as ChakraInput,\n  InputProps as ChakraInputProps,\n  InputLeftElement,\n  InputGroup,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { FieldError } from \"react-hook-form\";\nimport { IconType } from \"react-icons/lib\";\nimport {\n  forwardRef,\n  ForwardRefRenderFunction,\n} from \"react-router/node_modules/@types/react\";\n\ninterface InputProps extends ChakraInputProps {\n  name: string;\n  label?: string;\n  error?: FieldError | null;\n  icon?: IconType;\n}\n\ntype inputVariationOptions = {\n  [key: string]: string;\n};\n\nconst inputVariation: inputVariationOptions = {\n  error: \"negative.100\",\n  default: \"gray.400\",\n  focus: \"gray.600\",\n  filled: \"sucess.100\",\n};\n\nconst InputBase: ForwardRefRenderFunction<HTMLInputElement, InputProps> = (\n  { name, error = null, icon: Icon, label, ...rest },\n  ref\n) => {\n  const [variation, setVariation] = useState(\"default\");\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    if (error) {\n      return setVariation(\"error\");\n    }\n  }, [error]);\n\n  const handleInputFocus = useCallback(() => {\n    if (!!error) {\n      setVariation(\"focus\");\n    }\n  }, [error]);\n\n  const handleInputBlur = useCallback(() => {\n    if (value.length > 1 && !error) {\n      return setVariation(\"filled\");\n    }\n  }, [error, value]);\n\n  return (\n    <FormControl isInvalid={!!error}>\n      {!!label && <FormLabel>{label}</FormLabel>}\n\n      <InputGroup flexDirection=\"column\">\n        {Icon && (\n          <InputLeftElement mt=\"2.5\" color={inputVariation[variation]}>\n            <Icon />\n          </InputLeftElement>\n        )}\n        <ChakraInput\n          name={name}\n          bg=\"gray.50\"\n          color={inputVariation[variation]}\n          borderColor={inputVariation[variation]}\n          onFocus={handleInputFocus}\n          onBlurCapture={handleInputBlur}\n          onChangeCapture={(e) => setValue(e.currentTarget.value)}\n          variant=\"outline\"\n          _hover={{ bgColor: \"gray.100\" }}\n          _placeholder={{ color: \"gray.400\" }}\n          size=\"lg\"\n          h=\"60px\"\n          ref={ref}\n          {...rest}\n        />\n        {!!error && <FormErrorMessage>{error.message}</FormErrorMessage>}\n      </InputGroup>\n    </FormControl>\n  );\n};\n\nexport const Input = forwardRef(InputBase);\n"]},"metadata":{},"sourceType":"module"}