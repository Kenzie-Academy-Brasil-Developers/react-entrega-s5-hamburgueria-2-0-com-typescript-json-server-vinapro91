{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/atividades/q2/entregas/5A12/react-entrega-s5-hamburgueria-2-0-com-typescript-json-server-vinapro91/src/Provider/authToken.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { api } from \"../Services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({});\n\nconst useAuth = () => {\n  _s();\n\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"useAuth must be used witching an AuthProvider\");\n  }\n\n  return context;\n};\n\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [data, seteData] = useState(() => {\n    const acessToken = localStorage.getItem(\"@HamburgueriaKenzie:accessToken\");\n    const user = localStorage.getItem(\"@HamburgueriaKenzie:user\");\n\n    if (acessToken && user) {\n      return {\n        acessToken,\n        user: JSON.parse(user)\n      };\n    }\n\n    return {};\n  });\n  const singIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const response = await api.post(\"/login\", {\n      email,\n      password\n    });\n    const {\n      accessToken,\n      user\n    } = response.date;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(AuthProvider, \"Nd8w3kkuRqUxEBM1p/aozVo4hdE=\");\n\n_c = AuthProvider;\nexport { AuthProvider, useAuth };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/vinicius/atividades/q2/entregas/5A12/react-entrega-s5-hamburgueria-2-0-com-typescript-json-server-vinapro91/src/Provider/authToken.tsx"],"names":["React","createContext","useCallback","useContext","useState","api","AuthContext","useAuth","context","Error","AuthProvider","children","data","seteData","acessToken","localStorage","getItem","user","JSON","parse","singIn","email","password","response","post","accessToken","date"],"mappings":";;;;AAAA,OAAOA,KAAP,IACEC,aADF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,QALF,QAMO,OANP;AAQA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;;AAsBA,MAAMM,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGL,UAAU,CAACG,WAAD,CAA1B;;AACA,MAAI,CAACE,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD,CAND;;GAAMD,O;;AAQN,MAAMG,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqC;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAY,MAAM;AACjD,UAAMU,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,iCAArB,CAAnB;AACA,UAAMC,IAAI,GAAGF,YAAY,CAACC,OAAb,CAAqB,0BAArB,CAAb;;AAEA,QAAIF,UAAU,IAAIG,IAAlB,EAAwB;AACtB,aAAO;AAAEH,QAAAA,UAAF;AAAcG,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWF,IAAX;AAApB,OAAP;AACD;;AAED,WAAO,EAAP;AACD,GATgC,CAAjC;AAUA,QAAMG,MAAM,GAAGlB,WAAW,CAAC,OAAO;AAAEmB,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAP,KAAkD;AAC3E,UAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAJ,CAAS,QAAT,EAAmB;AAAEH,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAnB,CAAvB;AAEA,UAAM;AAAEG,MAAAA,WAAF;AAAeR,MAAAA;AAAf,QAAwBM,QAAQ,CAACG,IAAvC;AACD,GAJyB,EAIvB,EAJuB,CAA1B;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAA7B;AAAA,cAAkCf;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjBD;;IAAMD,Y;;KAAAA,Y;AAmBN,SAASA,YAAT,EAAuBH,OAAvB","sourcesContent":["import React, {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\n\nimport { api } from \"../Services/api\";\n\nconst AuthContext = createContext({});\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\ninterface User {\n  email: string;\n  id: string;\n  name: string;\n}\n\ninterface AuthState {\n  acessToken: string;\n  user: User;\n}\n\ninterface singInCredentials {\n  email: string;\n  password: string;\n}\n\nconst useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used witching an AuthProvider\");\n  }\n  return context;\n};\n\nconst AuthProvider = ({ children }: AuthProviderProps) => {\n  const [data, seteData] = useState<AuthState>(() => {\n    const acessToken = localStorage.getItem(\"@HamburgueriaKenzie:accessToken\");\n    const user = localStorage.getItem(\"@HamburgueriaKenzie:user\");\n\n    if (acessToken && user) {\n      return { acessToken, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n  const singIn = useCallback(async ({ email, password }: singInCredentials) => {\n    const response = await api.post(\"/login\", { email, password });\n\n    const { accessToken, user } = response.date;\n  }, []);\n  return <AuthContext.Provider value={{}}>{children}</AuthContext.Provider>;\n};\n\nexport { AuthProvider, useAuth };\n"]},"metadata":{},"sourceType":"module"}